= has_media

Media Managment Library for ActiveRecord and Carrierwave

Easy way to link media (ie image, audio, pdf for now) on other activerecords models

=== Create migrations

./script/generate has_media

== Usage

  has_one_medium  :image, :only => :image
  has_many_media  :images, :only => :image

  has_one_medium  :audio, :only => :audio
  has_many_media  :audios, :only => :audio

  has_one_medium  :image_no_encode, :only => :image, :encode => false

  has_one_medium  :pdf, :encode => false

== Model and Uploaders

You must defined model and uploader with the name given in the only option
Examples are in the /examples directory...

== Configuration

 * Set custom uploaders/models path to overload has_media ones
  HasMedia.custom_models_path = File.dirname(__FILE__) + '/../../app/models/has_media'

 * Set the directory path to use to store media
  HasMedia.directory_path = "media"

 * Set the base uri to access media
  HasMedia.directory_uri = "/media"

 * Set custom error messages
  HasMedia.errors_messages = {:type_error => I18n.t('has_media.errors.type_error')}

== Testing

Factory example using factory_girl :

  Factory.define :image, :class => Image do |f| 
    f.content_type 'image/jpeg'
    f.filename 'image.jpg'
    f.status 'accepted'
    f.encode_status 0
    f.add_attribute :context, 'images'
    f.file {ActionController::TestUploadedFile.new(File.join(Rails.root, '/spec/factories/image.jpg'), 'image/jpeg')}
  end

== TODO

* Add a video class

== Contributors

klacointe, spk, shingara, nono

== Copyright

Copyright (c) 2009 AF83. See LICENSE for details.
